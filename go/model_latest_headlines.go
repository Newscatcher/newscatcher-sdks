/*
NewsCatcher News API V2

NewsCatcher is a data-as-a-service startup that has one main goal: to build the largest database of structured news articles published online. In other words, we're like Google for the news part of the web, which you can access as a source of data.  Some useful links: - [How NewsCatcher Works](https://docs.newscatcherapi.com/knowledge-base/how-newscatcher-works) - [GitHub for the Python SDK](https://github.com/NewscatcherAPI/newscatcherapi-sdk-python) 

API version: 1.0.1
Contact: team@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
)

// LatestHeadlines struct for LatestHeadlines
type LatestHeadlines struct {
	// The time period you want to get the headlines for. Accpeted format: - `7d` -> Daily form, last 7 days time period - `6h` -> Hourly form, last six hours 
	When *string `json:"when,omitempty"`
	// The language you want to search in.
	Lang *string `json:"lang,omitempty"`
	Countries *string `json:"countries,omitempty"`
	NotCountries *string `json:"not_countries,omitempty"`
	Topic *string `json:"topic,omitempty"`
	Sources *string `json:"sources,omitempty"`
	NotSources *string `json:"not_sources,omitempty"`
	RankedOnly *bool `json:"ranked_only,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	Page *int32 `json:"page,omitempty"`
}

// NewLatestHeadlines instantiates a new LatestHeadlines object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestHeadlines() *LatestHeadlines {
	this := LatestHeadlines{}
	return &this
}

// NewLatestHeadlinesWithDefaults instantiates a new LatestHeadlines object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestHeadlinesWithDefaults() *LatestHeadlines {
	this := LatestHeadlines{}
	return &this
}

// GetWhen returns the When field value if set, zero value otherwise.
func (o *LatestHeadlines) GetWhen() string {
	if o == nil || isNil(o.When) {
		var ret string
		return ret
	}
	return *o.When
}

// GetWhenOk returns a tuple with the When field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetWhenOk() (*string, bool) {
	if o == nil || isNil(o.When) {
    return nil, false
	}
	return o.When, true
}

// HasWhen returns a boolean if a field has been set.
func (o *LatestHeadlines) HasWhen() bool {
	if o != nil && !isNil(o.When) {
		return true
	}

	return false
}

// SetWhen gets a reference to the given string and assigns it to the When field.
func (o *LatestHeadlines) SetWhen(v string) {
	o.When = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *LatestHeadlines) GetLang() string {
	if o == nil || isNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetLangOk() (*string, bool) {
	if o == nil || isNil(o.Lang) {
    return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *LatestHeadlines) HasLang() bool {
	if o != nil && !isNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *LatestHeadlines) SetLang(v string) {
	o.Lang = &v
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *LatestHeadlines) GetCountries() string {
	if o == nil || isNil(o.Countries) {
		var ret string
		return ret
	}
	return *o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetCountriesOk() (*string, bool) {
	if o == nil || isNil(o.Countries) {
    return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *LatestHeadlines) HasCountries() bool {
	if o != nil && !isNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given string and assigns it to the Countries field.
func (o *LatestHeadlines) SetCountries(v string) {
	o.Countries = &v
}

// GetNotCountries returns the NotCountries field value if set, zero value otherwise.
func (o *LatestHeadlines) GetNotCountries() string {
	if o == nil || isNil(o.NotCountries) {
		var ret string
		return ret
	}
	return *o.NotCountries
}

// GetNotCountriesOk returns a tuple with the NotCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetNotCountriesOk() (*string, bool) {
	if o == nil || isNil(o.NotCountries) {
    return nil, false
	}
	return o.NotCountries, true
}

// HasNotCountries returns a boolean if a field has been set.
func (o *LatestHeadlines) HasNotCountries() bool {
	if o != nil && !isNil(o.NotCountries) {
		return true
	}

	return false
}

// SetNotCountries gets a reference to the given string and assigns it to the NotCountries field.
func (o *LatestHeadlines) SetNotCountries(v string) {
	o.NotCountries = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *LatestHeadlines) GetTopic() string {
	if o == nil || isNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetTopicOk() (*string, bool) {
	if o == nil || isNil(o.Topic) {
    return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *LatestHeadlines) HasTopic() bool {
	if o != nil && !isNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *LatestHeadlines) SetTopic(v string) {
	o.Topic = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *LatestHeadlines) GetSources() string {
	if o == nil || isNil(o.Sources) {
		var ret string
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetSourcesOk() (*string, bool) {
	if o == nil || isNil(o.Sources) {
    return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *LatestHeadlines) HasSources() bool {
	if o != nil && !isNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given string and assigns it to the Sources field.
func (o *LatestHeadlines) SetSources(v string) {
	o.Sources = &v
}

// GetNotSources returns the NotSources field value if set, zero value otherwise.
func (o *LatestHeadlines) GetNotSources() string {
	if o == nil || isNil(o.NotSources) {
		var ret string
		return ret
	}
	return *o.NotSources
}

// GetNotSourcesOk returns a tuple with the NotSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetNotSourcesOk() (*string, bool) {
	if o == nil || isNil(o.NotSources) {
    return nil, false
	}
	return o.NotSources, true
}

// HasNotSources returns a boolean if a field has been set.
func (o *LatestHeadlines) HasNotSources() bool {
	if o != nil && !isNil(o.NotSources) {
		return true
	}

	return false
}

// SetNotSources gets a reference to the given string and assigns it to the NotSources field.
func (o *LatestHeadlines) SetNotSources(v string) {
	o.NotSources = &v
}

// GetRankedOnly returns the RankedOnly field value if set, zero value otherwise.
func (o *LatestHeadlines) GetRankedOnly() bool {
	if o == nil || isNil(o.RankedOnly) {
		var ret bool
		return ret
	}
	return *o.RankedOnly
}

// GetRankedOnlyOk returns a tuple with the RankedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetRankedOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.RankedOnly) {
    return nil, false
	}
	return o.RankedOnly, true
}

// HasRankedOnly returns a boolean if a field has been set.
func (o *LatestHeadlines) HasRankedOnly() bool {
	if o != nil && !isNil(o.RankedOnly) {
		return true
	}

	return false
}

// SetRankedOnly gets a reference to the given bool and assigns it to the RankedOnly field.
func (o *LatestHeadlines) SetRankedOnly(v bool) {
	o.RankedOnly = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *LatestHeadlines) GetPageSize() int32 {
	if o == nil || isNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetPageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.PageSize) {
    return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *LatestHeadlines) HasPageSize() bool {
	if o != nil && !isNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *LatestHeadlines) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *LatestHeadlines) GetPage() int32 {
	if o == nil || isNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestHeadlines) GetPageOk() (*int32, bool) {
	if o == nil || isNil(o.Page) {
    return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *LatestHeadlines) HasPage() bool {
	if o != nil && !isNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *LatestHeadlines) SetPage(v int32) {
	o.Page = &v
}

func (o LatestHeadlines) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.When) {
		toSerialize["when"] = o.When
	}
	if !isNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !isNil(o.Countries) {
		toSerialize["countries"] = o.Countries
	}
	if !isNil(o.NotCountries) {
		toSerialize["not_countries"] = o.NotCountries
	}
	if !isNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !isNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !isNil(o.NotSources) {
		toSerialize["not_sources"] = o.NotSources
	}
	if !isNil(o.RankedOnly) {
		toSerialize["ranked_only"] = o.RankedOnly
	}
	if !isNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !isNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableLatestHeadlines struct {
	value *LatestHeadlines
	isSet bool
}

func (v NullableLatestHeadlines) Get() *LatestHeadlines {
	return v.value
}

func (v *NullableLatestHeadlines) Set(val *LatestHeadlines) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestHeadlines) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestHeadlines) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestHeadlines(val *LatestHeadlines) *NullableLatestHeadlines {
	return &NullableLatestHeadlines{value: val, isSet: true}
}

func (v NullableLatestHeadlines) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestHeadlines) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


