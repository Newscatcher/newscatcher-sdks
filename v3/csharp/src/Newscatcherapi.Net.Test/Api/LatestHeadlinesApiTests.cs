/*
 * NewsCatcher-V3 Production API
 *
 * <img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>
 *
 * The version of the OpenAPI document: 3.2.16
 * Contact: maksym@newscatcherapi.com
 * Generated by: https://konfigthis.com
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Newscatcherapi.Net.Client;
using Newscatcherapi.Net.Api;
using Newscatcherapi.Net.Model;

namespace Newscatcherapi.Net.Test.Api
{
    /// <summary>
    ///  Class for testing LatestHeadlinesApi
    /// </summary>
    public class LatestHeadlinesApiTests : IDisposable
    {
        private NewscatcherClient client;

        public LatestHeadlinesApiTests()
        {
            client = new NewscatcherClient();
            client.SetBasePath("http://127.0.0.1:4010");
            // Configure API key authorization: apiKey
            client.SetApiKey("YOUR_API_KEY");

        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test Get
        /// </summary>
        [Fact]
        public void GetTest()
        {
            var when = "7d";
            var byParseDate = new ByParseDate("example");
            var sortBy = "relevancy";
            var lang = new Object(
            );
            var notLang = new Object(
            );
            var countries = new Object(
            );
            var notCountries = new Object(
            );
            var sources = new Object(
            );
            var predefinedSources = new Object(
            );
            var notSources = new Object(
            );
            var notAuthorName = new Object(
            );
            var rankedOnly = new RankedOnly("example");
            var isHeadline = new IsHeadline("example");
            var isOpinion = new IsOpinion("example");
            var isPaidContent = new IsPaidContent("example");
            var parentUrl = new Object(
            );
            var allLinks = new Object(
            );
            var allDomainLinks = new Object(
            );
            var wordCountMin = new WordCountMin("example");
            var wordCountMax = new WordCountMax("example");
            var page = new Page("example");
            var pageSize = new PageSize("example");
            var clusteringVariable = "clusteringVariable_example";
            var clusteringEnabled = new ClusteringEnabled("example");
            var clusteringThreshold = new ClusteringThreshold(100);
            var includeNlpData = true;
            var hasNlp = true;
            var theme = "theme_example";
            var notTheme = "notTheme_example";
            var oRGEntityName = "oRGEntityName_example";
            var pEREntityName = "pEREntityName_example";
            var lOCEntityName = "lOCEntityName_example";
            var mISCEntityName = "mISCEntityName_example";
            var titleSentimentMin = 8.14D;
            var titleSentimentMax = 8.14D;
            var contentSentimentMin = 8.14D;
            var contentSentimentMax = 8.14D;
            var iptcTags = new Object(
            );
            var notIptcTags = new Object(
            );
            var iabTags = new Object(
            );
            var notIabTags = new Object(
            );
            
            try
            {
                // [Get] Search For Latest Headlines Request
                LatestHeadlinesGetResponse result = client.LatestHeadlines.Get(when, byParseDate, sortBy, lang, notLang, countries, notCountries, sources, predefinedSources, notSources, notAuthorName, rankedOnly, isHeadline, isOpinion, isPaidContent, parentUrl, allLinks, allDomainLinks, wordCountMin, wordCountMax, page, pageSize, clusteringVariable, clusteringEnabled, clusteringThreshold, includeNlpData, hasNlp, theme, notTheme, oRGEntityName, pEREntityName, lOCEntityName, mISCEntityName, titleSentimentMin, titleSentimentMax, contentSentimentMin, contentSentimentMax, iptcTags, notIptcTags, iabTags, notIabTags);
                Console.WriteLine(result);
            }
            catch (ApiException e)
            {
                Console.WriteLine("Exception when calling LatestHeadlinesApi.Get: " + e.Message);
                Console.WriteLine("Status Code: "+ e.ErrorCode);
                Console.WriteLine(e.StackTrace);
            }
            catch (ClientException e)
            {
                Console.WriteLine(e.Response.StatusCode);
                Console.WriteLine(e.Response.RawContent);
                Console.WriteLine(e.InnerException);
            }
        }

        /// <summary>
        /// Test Post
        /// </summary>
        [Fact]
        public void PostTest()
        {
            var when = "7d";
            var byParseDate = new ByParseDate("example");
            var sortBy = "relevancy";
            var lang = "lang_example";
            var notLang = "notLang_example";
            var countries = "countries_example";
            var notCountries = "notCountries_example";
            var sources = "sources_example";
            var predefinedSources = "predefinedSources_example";
            var notSources = "notSources_example";
            var notAuthorName = "notAuthorName_example";
            var rankedOnly = new RankedOnly("example");
            var isHeadline = new IsHeadline("example");
            var isOpinion = new IsOpinion("example");
            var isPaidContent = new IsPaidContent("example");
            var parentUrl = "parentUrl_example";
            var allLinks = "allLinks_example";
            var allDomainLinks = "allDomainLinks_example";
            var wordCountMin = new WordCountMin("example");
            var wordCountMax = new WordCountMax("example");
            var page = new Page("example");
            var pageSize = new PageSize("example");
            var clusteringVariable = "clusteringVariable_example";
            var clusteringEnabled = new ClusteringEnabled("example");
            var clusteringThreshold = new ClusteringThreshold(100);
            var includeNlpData = false;
            var hasNlp = false;
            var theme = "theme_example";
            var notTheme = "notTheme_example";
            var oRGEntityName = "oRGEntityName_example";
            var pEREntityName = "pEREntityName_example";
            var lOCEntityName = "lOCEntityName_example";
            var mISCEntityName = "mISCEntityName_example";
            var titleSentimentMin = default(double);
            var titleSentimentMax = default(double);
            var contentSentimentMin = default(double);
            var contentSentimentMax = default(double);
            var iptcTags = "iptcTags_example";
            var notIptcTags = "notIptcTags_example";
            var iabTags = "iabTags_example";
            var notIabTags = "notIabTags_example";
            
            var latestHeadlinesRequest = new LatestHeadlinesRequest(
                when,
                byParseDate,
                sortBy,
                lang,
                notLang,
                countries,
                notCountries,
                sources,
                predefinedSources,
                notSources,
                notAuthorName,
                rankedOnly,
                isHeadline,
                isOpinion,
                isPaidContent,
                parentUrl,
                allLinks,
                allDomainLinks,
                wordCountMin,
                wordCountMax,
                page,
                pageSize,
                clusteringVariable,
                clusteringEnabled,
                clusteringThreshold,
                includeNlpData,
                hasNlp,
                theme,
                notTheme,
                oRGEntityName,
                pEREntityName,
                lOCEntityName,
                mISCEntityName,
                titleSentimentMin,
                titleSentimentMax,
                contentSentimentMin,
                contentSentimentMax,
                iptcTags,
                notIptcTags,
                iabTags,
                notIabTags
            );
            
            try
            {
                // [Post] Search For Latest Headlines Request
                LatestHeadlinesPostResponse result = client.LatestHeadlines.Post(latestHeadlinesRequest);
                Console.WriteLine(result);
            }
            catch (ApiException e)
            {
                Console.WriteLine("Exception when calling LatestHeadlinesApi.Post: " + e.Message);
                Console.WriteLine("Status Code: "+ e.ErrorCode);
                Console.WriteLine(e.StackTrace);
            }
            catch (ClientException e)
            {
                Console.WriteLine(e.Response.StatusCode);
                Console.WriteLine(e.Response.RawContent);
                Console.WriteLine(e.InnerException);
            }
        }
    }
}
