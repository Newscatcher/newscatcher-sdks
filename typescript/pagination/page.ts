/**
 * NewsCatcher News API V2
 * NewsCatcher is a data-as-a-service startup that has one main goal: to build the largest database of structured news articles published online. In other words, we\'re like Google for the news part of the web, which you can access as a source of data.  Some useful links: - [How NewsCatcher Works](https://docs.newscatcherapi.com/knowledge-base/how-newscatcher-works) - [GitHub for the Python SDK](https://github.com/NewscatcherAPI/newscatcherapi-sdk-python)
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: team@newscatcherapi.com
 *
 * NOTE: This file is auto generated by Konfig (https://konfigthis.com).
 * https://konfigthis.com
 * Do not edit the class manually.
 */

import { Pageable, PageParametersBase } from "./pageable";

/**
 * The set of parameters that appear in a paginated operation (requestBody or parameters)
 */
export type PageParameterProperties = {
  page?: number;
  pageSize?: number;
};

export type PageParameters = PageParametersBase<PageParameterProperties>;

/**
 * The set of properties that appear in a paginated operation's response
 */
export interface PageInfo {
  total_pages?: number;
  page?: number;
  page_size?: number;
}

export class Page<
  Data extends PageInfo,
  Parameters extends PageParameters
> extends Pageable<Data, Parameters> {
  protected get previousParameters(): PageParameterProperties | null {
    if (this.data.page === undefined) return null;
    return {
      page: this.data.page - 1,
    };
  }

  protected get nextParameters(): PageParameterProperties | null {
    if (this.data.page === undefined) return null;
    return {
      page: this.data.page + 1,
    };
  }
  hasPrevious(): boolean {
    return this.data.page === undefined ? false : this.data.page > 1;
  }

  hasNext(): boolean {
    if (this.data.page === undefined) return false;
    if (this.data.total_pages === undefined) return false;
    return this.data.page < this.data.total_pages;
  }
}
